package recursiveDescent;

import ast.Add;
import ast.Div;
import ast.Int;
import ast.Mul;
import ast.Sub;

public class ToStringVisitor implements Visitor<String> {
	
	private String ret;

	public ToStringVisitor() {
		this.ret = "";
	}

	public String getRet() {
		return this.ret;
	}
	
	@Override
	public String visit(Add n) {
		ret += "( + ";
		n.getLeft().accept(this);
		n.getRight().accept(this);
		return ret += ") ";
	}

	@Override
	public String visit(Sub n) {
		ret += "( - ";
		n.getLeft().accept(this);
		n.getRight().accept(this);
		return ret += ") ";
	}

	@Override
	public String visit(UMinus n) {
		ret += "( - ";
		n.getChild().accept(this);
		return ret += ") " ;
	}

	@Override
	public String visit(Mul n) {
		ret += "( * ";
		n.getLeft().accept(this);
		n.getRight().accept(this);
		return ret += ") ";
	}

	@Override
	public String visit(Div n) {
		ret += "( / ";
		n.getLeft().accept(this);
		n.getRight().accept(this);
		return ret+ ") ";

	}

	@Override
	public String visit(Int n) {
		return ret += n.toString() +" ";
	}
	
}
