<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="expr.ExpressionLexer"/>
<fullyQualifiedTypeName name="java.beans.Expression"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.Token"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="halstead.HalsteadLexer"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="MultiSet.Multiset"/>
<fullyQualifiedTypeName name="expr.ExpRecListener"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.ParserRuleContext"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.tree.gui.TreeViewer"/>
<fullyQualifiedTypeName name="javax.swing.JFrame"/>
<fullyQualifiedTypeName name="java.awt.Dimension"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="recDescent.Lexer"/>
<fullyQualifiedTypeName name="recDescent.Token"/>
<fullyQualifiedTypeName name="recDescent.RecDesLexer"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.lang.reflect.Array"/>
<fullyQualifiedTypeName name="ast.ExprNode"/>
<fullyQualifiedTypeName name="lexer_parser.Lexer"/>
<fullyQualifiedTypeName name="visitor.IndepTreePrintVisitor"/>
<fullyQualifiedTypeName name="lexer_parser.RecDesLexer"/>
<fullyQualifiedTypeName name="ast.HeteroAST"/>
<fullyQualifiedTypeName name="ast.AddNode"/>
<fullyQualifiedTypeName name="visitor.Visitor"/>
<fullyQualifiedTypeName name="visitor.EvaluationVisitor"/>
<fullyQualifiedTypeName name="calc_parse_tree.calcLexer"/>
<fullyQualifiedTypeName name="calc_interpreter.calc_interpreterParser"/>
<fullyQualifiedTypeName name="calc_interpreter.calc_interpreterLexer"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.InputStreamReader"/>
<fullyQualifiedTypeName name="org.testng.annotations.DataProvider"/>
<fullyQualifiedTypeName name="grammar.LExprLexer"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.tree.ParseTreeProperty"/>
<fullyQualifiedTypeName name="grammar.LExprBaseListener"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.io.InputStream"/>
<fullyQualifiedTypeName name="java.io.FileInputStream"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.tree.ParseTree"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.ANTLRInputStream"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.CommonTokenStream"/>
<fullyQualifiedTypeName name="org.antlr.v4.runtime.tree.ParseTreeWalker"/>
<fullyQualifiedTypeName name="visitor.TestEvaluator.EvaluatorWithProps"/>
<fullyQualifiedTypeName name="org.testng.Assert"/>
<fullyQualifiedTypeName name="grammar.ArrayInitLexer"/>
<fullyQualifiedTypeName name="grammar.ArrayInitBaseListener"/>
<fullyQualifiedTypeName name="grammar.JavaBaseListener"/>
<fullyQualifiedTypeName name="grammar.JavaParser.ClassDeclarationContext"/>
<fullyQualifiedTypeName name="grammar.JavaParser.ImportDeclarationContext"/>
<fullyQualifiedTypeName name="grammar.JavaParser.QualifiedNameContext"/>
<fullyQualifiedTypeName name="grammar.JavaLexer"/>
<fullyQualifiedTypeName name="grammar.JavaParser"/>
</qualifiedTypeNameHistroy>
